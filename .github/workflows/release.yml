name: Create Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build-and-release:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: windows-latest
            artifact: OpenRGB3DSpatialPlugin.dll
            path: release/OpenRGB3DSpatialPlugin.dll
          - os: ubuntu-latest
            artifact: libOpenRGB3DSpatialPlugin.so
            path: libOpenRGB3DSpatialPlugin.so

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup MSVC (Windows)
        if: matrix.os == 'windows-latest'
        uses: microsoft/setup-msbuild@v2

      - name: Install Qt (Windows)
        if: matrix.os == 'windows-latest'
        uses: jurplel/install-qt-action@v4
        with:
          version: '5.15.2'
          host: 'windows'
          target: 'desktop'
          arch: 'win64_msvc2019_64'
          cache: true
          aqtversion: '==3.1.*'

      - name: Install Qt (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y qtbase5-dev qt5-qmake qtbase5-dev-tools libusb-1.0-0-dev libhidapi-dev

      - name: Build (Windows)
        if: matrix.os == 'windows-latest'
        shell: cmd
        run: |
          call "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
          qmake OpenRGB3DSpatialPlugin.pro CONFIG+=release
          nmake

      - name: Build (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          qmake OpenRGB3DSpatialPlugin.pro PREFIX=/usr
          make -j$(nproc)

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact }}
          path: ${{ matrix.path }}

  create-release:
    needs: build-and-release
    if: always()
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          merge-multiple: true

      - name: List downloaded files
        run: |
          echo "Files in current directory:"
          ls -la
          echo "Current directory:"
          pwd
          echo "GitHub ref: $GITHUB_REF"

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            *.dll
            *.so
          draft: false
          prerelease: false
          generate_release_notes: true
          fail_on_unmatched_files: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create GitLab Release
        continue-on-error: true
        run: |
          VERSION=${GITHUB_REF#refs/tags/}

          # Create release on GitLab
          RELEASE_RESPONSE=$(curl --request POST \
            --header "PRIVATE-TOKEN: ${{ secrets.GITLAB_TOKEN }}" \
            --data "tag_name=$VERSION" \
            --data "name=$VERSION" \
            --data "description=Release $VERSION - Built on GitHub Actions" \
            "https://gitlab.com/api/v4/projects/wolfieeewolf1%2FOpenRGB3DSpatialPlugin/releases")

          # Upload Windows DLL
          curl --request POST \
            --header "PRIVATE-TOKEN: ${{ secrets.GITLAB_TOKEN }}" \
            --form "file=@OpenRGB3DSpatialPlugin.dll" \
            --form "name=OpenRGB3DSpatialPlugin.dll" \
            "https://gitlab.com/api/v4/projects/wolfieeewolf1%2FOpenRGB3DSpatialPlugin/uploads" | \
            jq -r '.url' | xargs -I {} curl --request POST \
            --header "PRIVATE-TOKEN: ${{ secrets.GITLAB_TOKEN }}" \
            --data "name=Windows DLL" \
            --data "url=https://gitlab.com/wolfieeewolf1/OpenRGB3DSpatialPlugin{}" \
            "https://gitlab.com/api/v4/projects/wolfieeewolf1%2FOpenRGB3DSpatialPlugin/releases/$VERSION/assets/links"

          # Upload Linux SO
          curl --request POST \
            --header "PRIVATE-TOKEN: ${{ secrets.GITLAB_TOKEN }}" \
            --form "file=@libOpenRGB3DSpatialPlugin.so" \
            --form "name=libOpenRGB3DSpatialPlugin.so" \
            "https://gitlab.com/api/v4/projects/wolfieeewolf1%2FOpenRGB3DSpatialPlugin/uploads" | \
            jq -r '.url' | xargs -I {} curl --request POST \
            --header "PRIVATE-TOKEN: ${{ secrets.GITLAB_TOKEN }}" \
            --data "name=Linux SO" \
            --data "url=https://gitlab.com/wolfieeewolf1/OpenRGB3DSpatialPlugin{}" \
            "https://gitlab.com/api/v4/projects/wolfieeewolf1%2FOpenRGB3DSpatialPlugin/releases/$VERSION/assets/links"